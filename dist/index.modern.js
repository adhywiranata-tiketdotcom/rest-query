import{useEffect as t,createContext as n,useContext as e,useState as a,useCallback as r,createElement as o}from"react";function c(){return(c=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a])}return t}).apply(this,arguments)}var i=n({store:null});const l={isLoading:!1,error:null,data:null},s={CACHE_FIRST:"cache-first",NETWORK_ONLY:"network-only",CACHE_ONLY:"cache-only"},u={key:null,cachePolicy:s.CACHE_FIRST};function h(n,o=u){const h=(t=>{const n=c({},u);return Object.keys(t).forEach(e=>{Object.prototype.hasOwnProperty.call(u,e)?n[e]=t[e]:console.warn("[RESTICACHE WARNING]",(t=>`Option [${t}] is not part of the API. While this is not an error, ensure the options matches the API.`)(e))}),n})(o),f=e(i),y=h.key||btoa(n),O=f.getCachedData(y),d=Boolean(O),C=h.cachePolicy!==s.NETWORK_ONLY,p=[s.CACHE_FIRST,s.NETWORK_ONLY].includes(h.cachePolicy),E=d&&C,R=c({},l,{data:O}),A=E?R:l,[N,w]=a(A),g=r(async()=>{if(d||!p)return;w(c({},N,{isLoading:!0}));const t=await async function(t){const n=await window.fetch(t);return await n.json()}(n);w(c({},N,{data:t})),C&&f.setCacheData(y,t)},[d,p,N,n,C,f,y]);return t(()=>{g()},[]),N}function f({children:t}){const[n,e]=a({});return o(i.Provider,{value:{store:n,getCachedData:function(t){if(!n[t])return null;try{var e;return JSON.parse(null==(e=n[t])?void 0:e.data)}catch(t){return console.log("[RESTICACHE ERROR]",t),null}},setCacheData:function(t,a){const r=JSON.stringify(a);e(c({},n,{[t]:{data:r,cacheStoredAt:null,cacheExpiredAt:null}}))}}},t)}export{f as RestQueryProvider,h as useCacheable};
//# sourceMappingURL=index.modern.js.map
